{"version":3,"sources":["actions/index.js","actions/types.js","components/Payments.js","components/Header.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","Payments","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","this","auth","href","key","style","margin","credits","console","log","to","id","renderContent","App","combineReducers","state","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"6YAcaA,EAAY,yDAAM,WAAOC,GAAP,eAAAC,EAAA,sEASTC,IAAMC,IAAI,qBATD,OASrBC,EATqB,OAU3BJ,EAAS,CAAEK,KCtBW,aDsBOC,QAASF,EAAIG,OAVf,2CAAN,uDAcZC,EAAc,SAACC,GAAD,8CAAW,WAAMT,GAAN,eAAAC,EAAA,sEAGhBC,IAAMQ,KAAK,cAAeD,GAHV,OAG5BL,EAH4B,OAKlCJ,EAAS,CAAEK,KC/BW,aD+BOC,QAASF,EAAIG,OALR,2CAAX,uD,iBEpBrBI,E,uKACQ,IAAD,OACL,OACI,kBAAC,IAAD,CACIC,KAAK,SACLC,YAAY,0BACZC,OAAQ,IACRL,MAAO,SAAAA,GAAK,OAAI,EAAKM,MAAMP,YAAYC,IACvCO,UAAWC,+GAEX,4BAAQC,UAAU,OAAlB,oB,GAVOC,aAuBRC,cAAQ,KAAMC,EAAdD,CAAuBT,GCxBhCW,E,8KAIE,OAAQC,KAAKR,MAAMS,MACf,KAAK,KACD,OACJ,KAAK,EACD,OAAO,4BAAI,uBAAGC,KAAK,gBAAR,sBAGf,QAEI,MAAO,CACH,wBAAIC,IAAI,KAAI,kBAAC,EAAD,OAEZ,wBAAIA,IAAI,IAAIC,MAAO,CAAEC,OAAQ,WAA7B,YACcL,KAAKR,MAAMS,KAAKK,SAE9B,wBAAIH,IAAI,KAAI,uBAAGD,KAAK,eAAR,gB,+BAUxB,OADAK,QAAQC,IAAIR,KAAKR,OAEb,6BACI,yBAAKG,UAAU,eACX,kBAAC,IAAD,CACIc,GAAIT,KAAKR,MAAMS,KAAO,WAAa,IACnCN,UAAU,mBAFd,UAMA,wBAAIe,GAAG,aAAaf,UAAU,UACzBK,KAAKW,uB,GAvCTf,aA4DNC,aANf,YACI,MAAO,CACHI,KAF2B,EAARA,QAMZJ,CAAyBE,GAAzBF,ICxCTe,E,kLAOEZ,KAAKR,MAAMhB,c,uCAPDoB,aAsCHC,cAAQ,KAAMC,EAAdD,CAAuBe,GC1DvBC,cAAgB,CAC3BZ,KCHW,WAAiC,IAAvBa,EAAsB,uDAAd,KAAMC,EAAQ,uCAG3C,OAAQA,EAAOjC,MACX,ILPkB,aKad,OAAOiC,EAAOhC,UAAW,EAE7B,QACI,OAAO+B,MCCbE,EAAQC,YAAYC,EAAU,GAAIC,YAAgBC,MAMxDC,IAASC,OAGL,kBAAC,IAAD,CAAUN,MAAOA,GAAO,kBAAC,EAAD,OACxBO,SAASC,cAAc,Y","file":"static/js/main.1dd8dbf3.chunk.js","sourcesContent":["// ajax request\r\nimport axios from 'axios';\r\nimport { FETCH_USER } from './types'\r\n\r\n// action creater\r\n// arrow function assign to fetchUser variable\r\n// return a function rather then return action\r\n// same as ... fetchuUser =()=>{\r\n//          return function(dispatch){\r\n//              ...\r\n//              }\r\n//          }写法不同\r\n// single argument not need ()\r\n// async function\r\nexport const fetchUser = () => async (dispatch) => {\r\n    // make get request to backend\r\n    // relevant path\r\n    // axios\r\n    //     .get('/api/current_user')\r\n    //     // dipatch an action after ajax request completed,asynchrouous\r\n    //     .then(res => dispatch({ type: FETCH_USER, payload: res }))\r\n    //  res is the output of axios\r\n    // res.data is user model\r\n    const res = await axios.get('/api/current_user')\r\n    dispatch({ type: FETCH_USER, payload: res.data });\r\n};\r\n\r\n// response sends back user\r\nexport const handleToken = (token) => async dispatch => {\r\n    // made a post request to back end server\r\n    // first: url second: the entire token we got back from stripe \r\n    const res = await axios.post('/api/stripe', token)\r\n    // get back the same user model as fetchUser\r\n    dispatch({ type: FETCH_USER, payload: res.data })\r\n\r\n\r\n}\r\n\r\n\r\n","// action types in seperate file\r\n// import to index.js\r\nexport const FETCH_USER = 'fetch_user';","// stripe billing\r\nimport React, { Component } from 'react'\r\nimport StripeCheckout from 'react-stripe-checkout'\r\n// connect react component to redux createStore\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions'\r\n\r\n// getHandletoken call\r\nclass Payments extends Component {\r\n    render() {\r\n        return (\r\n            <StripeCheckout\r\n                name=\"Emaily\"\r\n                description=\"$5 for 5 survey credits\"\r\n                amount={500}\r\n                token={token => this.props.handleToken(token)}\r\n                stripeKey={process.env.REACT_APP_STRIPE_KEY}\r\n            >\r\n                <button className=\"btn\">\r\n                    Add Credits\r\n                </button>\r\n            </StripeCheckout>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n// no map state function\r\n// passes state and action creater into the Payments component, \r\n// without subscribing to the store\r\nexport default connect(null, actions)(Payments)","// Header component\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n// Link tags, app 内部的navigation,'react-router' inside the browsers\r\nimport { Link } from 'react-router-dom'\r\nimport Payments from './Payments'\r\n\r\nclass Header extends Component {\r\n    // helper method, show state in header\r\n\r\n    renderContent() {\r\n        switch (this.props.auth) {\r\n            case null:\r\n                return;\r\n            case false:\r\n                return <li><a href=\"/auth/google\">Login With Google</a></li>\r\n            // logged in user model,payment \r\n            // return an array of elements\r\n            default:\r\n                // billing,provide a key, unique,static key\r\n                return [\r\n                    <li key=\"1\"><Payments /></li>,\r\n                    // topbottom 0 rightleft 10px\r\n                    <li key=\"3\" style={{ margin: \"0 15px\" }}>\r\n                        Credits: {this.props.auth.credits}\r\n                    </li>,\r\n                    <li key=\"2\"><a href=\"/api/logout\">Log out</a></li>,\r\n\r\n                ]\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <Link\r\n                        to={this.props.auth ? \"/surveys\" : \"/\"}\r\n                        className=\"left brand-logo\"\r\n                    >\r\n                        Emaily\r\n                    </Link>\r\n                    <ul id=\"nav-mobile\" className=\"right \">\r\n                        {this.renderContent()}\r\n\r\n                    </ul>\r\n\r\n\r\n                </div>\r\n            </nav>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n// define map state outof redux store\r\n// auth: state.auth\r\nfunction mapStateToProps({ auth }) {\r\n    return {\r\n        auth\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","// React Router, rendering layer control\r\n// es2015 modules\r\n// backend use normal modules\r\n\r\nimport React, { Component } from 'react';\r\n// nevigate react-router-dom\r\n// BrowserRouter: tell react how to behave when URL changes\r\n// <Route /> is used to declaratively map routes to your application's component hierarchy.\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\n// import different actions , connect give components ability\r\n// to call action creaters\r\nimport { connect } from 'react-redux'\r\n// take all actions we defined, and assign them to object actions.\r\nimport * as actions from '../actions'\r\n// Landing component\r\nimport Landing from './Landing'\r\n\r\nimport Header from './Header'\r\nconst Dashboard = () => <h2>Dashboard</h2>\r\n\r\nconst SurveyNew = () => <h2>SurveyNew</h2>\r\n\r\n// create functional component\r\n// BrowserRoute:\r\n//   a collection of different routes, at most one child\r\n//   inside div, set Route, \"/\" : root route of application then component appear on the screen\r\n// App component to be class-based. So it can call action creater\r\nclass App extends Component {\r\n    // call action creator\r\n    // fetch current user\r\n    // componentDidMount() 会在组件挂载后（插入 DOM 树中）立即调用。\r\n    // 依赖于 DOM 节点的初始化应该放在这里。\r\n    // all action assign to App props\r\n    componentDidMount() {\r\n        this.props.fetchUser();\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            // css\r\n            // container : add space, top level\r\n            <div className=\"container\">\r\n                <BrowserRouter>\r\n                    <div>\r\n                        <Header />\r\n                        <Route exact path=\"/\" component={Landing} />\r\n                        <Route exact path=\"/surveys\" component={Dashboard} />\r\n                        <Route path=\"/surveys/new\" component={SurveyNew} />\r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// expore component\r\n// first: map state second:all the action creaters\r\n// actions assigned to App component as props\r\nexport default connect(null, actions)(App);","// index.js list all reducers in ./reducers/index.js\r\n// {named import }It only works if A contains a named export called A:\r\nimport { combineReducers } from 'redux'\r\n// default import, It only works if A has the default export:\r\nimport authReducer from './authReducer'\r\n\r\n// keys in state object\r\nexport default combineReducers({\r\n    auth: authReducer\r\n});","import { FETCH_USER } from '../actions/types'\r\n// state to be initialized with empty project\r\n// null: not know user logged in or not,defalut \r\n// usermodel: successfully login \r\n// false : fail login\r\nexport default function (state = null, action) {\r\n    // console.log(action);\r\n    // fetchUser-> axios response object\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            // action.payload is the user model, action\r\n            // 的携带数据\r\n            // not return empty string if user log out\r\n            // ''||false\r\n            // '' is false value\r\n            return action.payload || false;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","// redux data\r\n// import materialize-css from node-module materialize-css,\r\n// no need to add relative paths\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport reduxThunk from 'redux-thunk';\r\n\r\n\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from './reducers';\r\n// action creater, modify states\r\n\r\n\r\n// reducer, state, applyMiddleware\r\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\r\n\r\n\r\n// first : root component, second: supplied container\r\n// second: render react appliction to \r\n// return a reference to the component\r\nReactDOM.render(\r\n    // add provider tag to store, App as a child of component\r\n    // provider is a react component\r\n    <Provider store={store}><App /></Provider>,\r\n    document.querySelector('#root'));\r\n\r\n"],"sourceRoot":""}